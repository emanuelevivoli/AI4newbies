Traceback (most recent call last):
  File "/Users/emanuelevivoli/miniconda3/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/Users/emanuelevivoli/miniconda3/lib/python3.7/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/emanuelevivoli/miniconda3/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/emanuelevivoli/miniconda3/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/emanuelevivoli/miniconda3/lib/python3.7/asyncio/base_events.py", line 579, in run_until_complete
    return future.result()
  File "/Users/emanuelevivoli/miniconda3/lib/python3.7/site-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/Users/emanuelevivoli/miniconda3/lib/python3.7/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/emanuelevivoli/miniconda3/lib/python3.7/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import torch
import torchvision

# Load the CIFAR-10 dataset
dataset = torchvision.datasets.CIFAR10(root='.', download=True)

# Define the model
model = torchvision.models.resnet18(num_classes=10)

# Define the loss function and optimizer
loss_fn = torch.nn.CrossEntropyLoss()
optimizer = torch.optim.Adam(model.parameters())

# Train the model
for epoch in range(10):
  for data, target in dataset:
    # Forward pass
    output = model(data)
    loss = loss_fn(output, target)

    # Backward pass
    optimizer.zero_grad()
    loss.backward()
    optimizer.step()

  print(f'Epoch {epoch+1} loss: {loss.item()}')

# Test the model
model.eval()
correct = 0
total = 0

with torch.no_grad():
  for data, target in dataset:
    output = model(data)
    _, predicted = torch.max(output.data, 1)
    total += target.size(0)
    correct += (predicted == target).sum().item()

print(f'Accuracy: {correct / total}')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[0;32m/var/folders/yw/39qgg96x2451prd0f9qrtbzr0000gn/T/ipykernel_8221/4139351495.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0;32mimport[0m [0mtorch[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0;32mimport[0m [0mtorchvision[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0;34m[0m[0m
[1;32m      4[0m [0;31m# Load the CIFAR-10 dataset[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0mdataset[0m [0;34m=[0m [0mtorchvision[0m[0;34m.[0m[0mdatasets[0m[0;34m.[0m[0mCIFAR10[0m[0;34m([0m[0mroot[0m[0;34m=[0m[0;34m'.'[0m[0;34m,[0m [0mdownload[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'torch'
ModuleNotFoundError: No module named 'torch'

